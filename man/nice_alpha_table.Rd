% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nice_alpha_table.R
\name{nice_alpha_table}
\alias{nice_alpha_table}
\alias{alpha_table}
\title{Table with alpha values}
\usage{
nice_alpha_table(
  data,
  scales,
  labels = NULL,
  round = 2,
  ci = TRUE,
  conf_level = 0.95,
  check_key = TRUE,
  keys = NULL,
  keys_from_weights = FALSE,
  RMSEA = FALSE,
  difficulty = FALSE,
  values = NULL,
  fa = TRUE
)

alpha_table(
  data,
  scales,
  labels = NULL,
  round = 2,
  ci = TRUE,
  conf_level = 0.95,
  check_key = TRUE,
  keys = NULL,
  keys_from_weights = FALSE,
  RMSEA = FALSE,
  difficulty = FALSE,
  values = NULL,
  fa = TRUE
)
}
\arguments{
\item{data}{A data Frame}

\item{scales}{A list containing vectors with variable names. Each list
element defines one scale. Named list elements are used as labels.}

\item{labels}{Label names for scales (defaults to named list elements in
'scales').}

\item{round}{Rounds values to given decimal position.}

\item{ci}{If TRUE confidence intervals are calculated.}

\item{conf_level}{Confidence level (e.g. 0.95 for 95 percent).}

\item{check_key}{Check_key for the psych::alpha function.}

\item{keys}{Optional key argument for the psych::alpha function.}

\item{keys_from_weights}{If TRUE, tries to define keys from the weights
dictionary attribute. These are only available when you defined them with
the scaledic package.}

\item{RMSEA}{If TRUE RMSEA is calculated.}

\item{difficulty}{If TRUE, the difficulty of the item is calculated.}

\item{values}{Sets maximum and minimum valid values necessary to calculate
item difficulty.}

\item{fa}{If TRUE, a one factor exploratory factor analyses is calculated and
loadings are reported.}
}
\value{
A data frame with concise scale indices.
}
\description{
Returns a data.frame with item analyses for the provided scales.
}
\examples{
## Example needs packages scaledic and purrr installed and active
nice_alpha_table(
  data = wmisc:::ex_itrf,
  scales = wmisc:::ex_itrf_scales,
  labels = c("Inernalizing", "Externalizing"),
  keys_from_weights = TRUE,
  difficulty = TRUE,
  values = list(c(0, 3)),
  RMSEA = TRUE
)

nice_alpha_table(
  wmisc:::data_emo,
  wmisc:::data_emo_scales,
  check_key = TRUE,
  difficulty = TRUE,
  value = list(c(0,4))
  )
}
